<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.mbari.vars</groupId>
  <artifactId>jsharktopoda</artifactId>
  <version>0.1.1</version>
  <packaging>jar</packaging>
  <name>jsharktopoda</name>
  <url>http://maven.apache.org</url>
  <properties>
    <!-- Installer Filename without suffix -->
    <app.filename>JSharktopoda</app.filename>
    <!-- The JavaFX Application class name -->
    <app.mainClass>org.mbari.m3.jsharktopoda.javafx.JSharktopoda</app.mainClass>
    <!-- Optional parameters to the application, will be embedded in the launcher and can be overriden on the command line -->
    <app.parameters>--myOption=myValue --myOtherOption=myOtherValue</app.parameters>
    <!-- The Application vendor used by javapackager -->
    <app.vendor>Monterey Bay Aquarium Research Institute</app.vendor>
    <!-- The Application version used by javapackager -->
    <app.version>${project.version}</app.version>
    <!-- Base URL where you will host the application artifacts -->
    <!--<app.url>http://dsg.mbari.org/m3/vars-annotation/</app.url>-->
    <app.url>http://m3.shore.mbari.org/apps/jsharktopoda/</app.url>
    <!-- Optional scp target for application artifacts hosted at the above url -->
    <app.deploy.target>brian@m3.shore.mbari.org:/var/www/html/apps/jsharktopoda</app.deploy.target>
    <!-- The app and launcher will be assembled in this folder -->
    <app.dir>${project.build.directory}/app</app.dir>
    <!-- Native installers will be built in this folder -->
    <app.installerdir>${project.build.directory}/installer</app.installerdir>
    <!-- Should the client downgrade if the server version is older than the local version? -->
    <app.acceptDowngrade>false</app.acceptDowngrade>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.mbari.vcr4j</groupId>
      <artifactId>vcr4j-sharktopoda</artifactId>
      <version>4.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.mbari.vcr4j</groupId>
      <artifactId>vcr4j-core</artifactId>
      <version>4.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.mbari</groupId>
      <artifactId>mbarix4j</artifactId>
      <version>1.10.0</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/junit/junit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>de.jensd</groupId>
      <artifactId>fontawesomefx-commons</artifactId>
      <version>8.15</version>
    </dependency>
    <dependency>
      <groupId>de.jensd</groupId>
      <artifactId>fontawesomefx-materialicons</artifactId>
      <version>2.2.0-5</version>
    </dependency>
    <dependency>
      <groupId>uk.co.caprica</groupId>
      <artifactId>vlcj</artifactId>
      <version>3.10.1</version>
      <!-- <version>4.0.0-SNAPSHOT</version> -->
    </dependency>
    <dependency>
      <groupId>com.jfoenix</groupId>
      <artifactId>jfoenix</artifactId>
      <version>1.11.0</version>
    </dependency>
    <dependency>
      <groupId>io.reactivex.rxjava2</groupId>
      <artifactId>rxjavafx</artifactId>
      <version>2.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.25</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>bintray-jerady-maven</id>
      <name>bintray</name>
      <url>http://dl.bintray.com/jerady/maven</url>
    </repository>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>bintray-hohonuuli-maven</id>
      <name>bintray</name>
      <url>http://dl.bintray.com/hohonuuli/maven</url>
    </repository>
  </repositories>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
        <source>${java.version}</source>
        <target>${java.version}</target>
        <showWarnings>true</showWarnings>
        <showDeprecation>true</showDeprecation>
      </configuration>
      </plugin>
      <!-- Compile project jar to appdir -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
        <configuration>
          <outputDirectory>${app.dir}</outputDirectory>
        </configuration>
      </plugin>
      <!-- package as uber jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>org.mbari.m3.jsharktopoda.javafx.JSharktopoda</mainClass>
                </transformer>
              </transformers>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <finalName>${artifactId}-${version}-app</finalName>
        </configuration>
      </plugin>
      <!-- Copy dependencies to appdir -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.0.2</version>
        <configuration>
          <excludeScope>provided</excludeScope>
          <outputDirectory>${app.dir}</outputDirectory>
          <stripVersion>true</stripVersion>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <!-- Generate app.xml manifest -->
        <executions>
          <execution>
            <id>deploy-app</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>scp</executable>
              <arguments>
                <argument>-r</argument>
                <argument>${app.dir}/.</argument>
                <argument>${app.deploy.target}</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.zenjava</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>8.6.0</version>
        <configuration>
          <mainClass>${app.mainClass}</mainClass>
          <verbose>true</verbose>
          <identifier>JSharktopoda</identifier>
          <vendor>Monterey Bay Aquarium Research Institute</vendor>
          <appName>${project.name}</appName>
          <bundleArguments>
            <!-- to include "dtjava.js" and other related files, set this to TRUE -->
            <jnlp.includeDT>true</jnlp.includeDT>
            <jnlp.outfile>${project.name}</jnlp.outfile>
          </bundleArguments>
        </configuration>
        <executions>
          <execution>
            <!-- required before build-native -->
            <id>create-jfxjar</id>
            <phase>package</phase>
            <goals>
              <goal>build-jar</goal>
            </goals>
          </execution>
          <execution>
            <id>create-native</id>
            <phase>package</phase>
            <goals>
              <goal>build-native</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
